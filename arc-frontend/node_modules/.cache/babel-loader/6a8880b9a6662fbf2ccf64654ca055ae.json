{"ast":null,"code":"\"use strict\";\n\nvar _utils = _interopRequireWildcard(require(\"./utils\"));\n\nvar _core = require(\"./core\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\n(0, _utils.default)(\"ArgumentPlaceholder\", {});\n(0, _utils.default)(\"BindExpression\", {\n  visitor: [\"object\", \"callee\"],\n  aliases: [\"Expression\"],\n  fields: !process.env.BABEL_TYPES_8_BREAKING ? {\n    object: {\n      validate: Object.assign(() => {}, {\n        oneOfNodeTypes: [\"Expression\"]\n      })\n    },\n    callee: {\n      validate: Object.assign(() => {}, {\n        oneOfNodeTypes: [\"Expression\"]\n      })\n    }\n  } : {\n    object: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    callee: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"ClassProperty\", {\n  visitor: [\"key\", \"value\", \"typeAnnotation\", \"decorators\"],\n  builder: [\"key\", \"value\", \"typeAnnotation\", \"decorators\", \"computed\", \"static\"],\n  aliases: [\"Property\"],\n  fields: Object.assign({}, _core.classMethodOrPropertyCommon, {\n    value: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    },\n    definite: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    typeAnnotation: {\n      validate: (0, _utils.assertNodeType)(\"TypeAnnotation\", \"TSTypeAnnotation\", \"Noop\"),\n      optional: true\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    },\n    readonly: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    declare: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    }\n  })\n});\n(0, _utils.default)(\"PipelineTopicExpression\", {\n  builder: [\"expression\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"PipelineBareFunction\", {\n  builder: [\"callee\"],\n  visitor: [\"callee\"],\n  fields: {\n    callee: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"PipelinePrimaryTopicReference\", {\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"ClassPrivateProperty\", {\n  visitor: [\"key\", \"value\", \"decorators\"],\n  builder: [\"key\", \"value\", \"decorators\", \"static\"],\n  aliases: [\"Property\", \"Private\"],\n  fields: {\n    key: {\n      validate: (0, _utils.assertNodeType)(\"PrivateName\")\n    },\n    value: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    },\n    typeAnnotation: {\n      validate: (0, _utils.assertNodeType)(\"TypeAnnotation\", \"TSTypeAnnotation\", \"Noop\"),\n      optional: true\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    }\n  }\n});\n(0, _utils.default)(\"ClassPrivateMethod\", {\n  builder: [\"kind\", \"key\", \"params\", \"body\", \"static\"],\n  visitor: [\"key\", \"params\", \"body\", \"decorators\", \"returnType\", \"typeParameters\"],\n  aliases: [\"Function\", \"Scopable\", \"BlockParent\", \"FunctionParent\", \"Method\", \"Private\"],\n  fields: Object.assign({}, _core.classMethodOrDeclareMethodCommon, _core.functionTypeAnnotationCommon, {\n    key: {\n      validate: (0, _utils.assertNodeType)(\"PrivateName\")\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    }\n  })\n});\n(0, _utils.default)(\"ImportAttribute\", {\n  visitor: [\"key\", \"value\"],\n  fields: {\n    key: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\", \"StringLiteral\")\n    },\n    value: {\n      validate: (0, _utils.assertNodeType)(\"StringLiteral\")\n    }\n  }\n});\n(0, _utils.default)(\"Decorator\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"DoExpression\", {\n  visitor: [\"body\"],\n  aliases: [\"Expression\"],\n  fields: {\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    }\n  }\n});\n(0, _utils.default)(\"ExportDefaultSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\n(0, _utils.default)(\"PrivateName\", {\n  visitor: [\"id\"],\n  aliases: [\"Private\"],\n  fields: {\n    id: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\n(0, _utils.default)(\"RecordExpression\", {\n  visitor: [\"properties\"],\n  aliases: [\"Expression\"],\n  fields: {\n    properties: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"ObjectProperty\", \"SpreadElement\")))\n    }\n  }\n});\n(0, _utils.default)(\"TupleExpression\", {\n  fields: {\n    elements: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Expression\", \"SpreadElement\"))),\n      default: []\n    }\n  },\n  visitor: [\"elements\"],\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"DecimalLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});\n(0, _utils.default)(\"StaticBlock\", {\n  visitor: [\"body\"],\n  fields: {\n    body: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Statement\")))\n    }\n  },\n  aliases: [\"Scopable\", \"BlockParent\"]\n});\n(0, _utils.default)(\"ModuleExpression\", {\n  visitor: [\"body\"],\n  fields: {\n    body: {\n      validate: (0, _utils.assertNodeType)(\"Program\")\n    }\n  },\n  aliases: [\"Expression\"]\n});","map":{"version":3,"sources":["/Users/AustinCai/Desktop/CS 370/ARC/arc-art-critique/arc-frontend/node_modules/@babel/types/lib/definitions/experimental.js"],"names":["_utils","_interopRequireWildcard","require","_core","_getRequireWildcardCache","WeakMap","cache","obj","__esModule","default","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","visitor","aliases","fields","process","env","BABEL_TYPES_8_BREAKING","object","validate","assign","oneOfNodeTypes","callee","assertNodeType","builder","classMethodOrPropertyCommon","value","optional","definite","assertValueType","typeAnnotation","decorators","chain","assertEach","readonly","declare","expression","classMethodOrDeclareMethodCommon","functionTypeAnnotationCommon","body","exported","id","properties","elements"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _utils = _interopRequireWildcard(require(\"./utils\"));\n\nvar _core = require(\"./core\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n(0, _utils.default)(\"ArgumentPlaceholder\", {});\n(0, _utils.default)(\"BindExpression\", {\n  visitor: [\"object\", \"callee\"],\n  aliases: [\"Expression\"],\n  fields: !process.env.BABEL_TYPES_8_BREAKING ? {\n    object: {\n      validate: Object.assign(() => {}, {\n        oneOfNodeTypes: [\"Expression\"]\n      })\n    },\n    callee: {\n      validate: Object.assign(() => {}, {\n        oneOfNodeTypes: [\"Expression\"]\n      })\n    }\n  } : {\n    object: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    },\n    callee: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"ClassProperty\", {\n  visitor: [\"key\", \"value\", \"typeAnnotation\", \"decorators\"],\n  builder: [\"key\", \"value\", \"typeAnnotation\", \"decorators\", \"computed\", \"static\"],\n  aliases: [\"Property\"],\n  fields: Object.assign({}, _core.classMethodOrPropertyCommon, {\n    value: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    },\n    definite: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    typeAnnotation: {\n      validate: (0, _utils.assertNodeType)(\"TypeAnnotation\", \"TSTypeAnnotation\", \"Noop\"),\n      optional: true\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    },\n    readonly: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    },\n    declare: {\n      validate: (0, _utils.assertValueType)(\"boolean\"),\n      optional: true\n    }\n  })\n});\n(0, _utils.default)(\"PipelineTopicExpression\", {\n  builder: [\"expression\"],\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"PipelineBareFunction\", {\n  builder: [\"callee\"],\n  visitor: [\"callee\"],\n  fields: {\n    callee: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"PipelinePrimaryTopicReference\", {\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"ClassPrivateProperty\", {\n  visitor: [\"key\", \"value\", \"decorators\"],\n  builder: [\"key\", \"value\", \"decorators\", \"static\"],\n  aliases: [\"Property\", \"Private\"],\n  fields: {\n    key: {\n      validate: (0, _utils.assertNodeType)(\"PrivateName\")\n    },\n    value: {\n      validate: (0, _utils.assertNodeType)(\"Expression\"),\n      optional: true\n    },\n    typeAnnotation: {\n      validate: (0, _utils.assertNodeType)(\"TypeAnnotation\", \"TSTypeAnnotation\", \"Noop\"),\n      optional: true\n    },\n    decorators: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Decorator\"))),\n      optional: true\n    }\n  }\n});\n(0, _utils.default)(\"ClassPrivateMethod\", {\n  builder: [\"kind\", \"key\", \"params\", \"body\", \"static\"],\n  visitor: [\"key\", \"params\", \"body\", \"decorators\", \"returnType\", \"typeParameters\"],\n  aliases: [\"Function\", \"Scopable\", \"BlockParent\", \"FunctionParent\", \"Method\", \"Private\"],\n  fields: Object.assign({}, _core.classMethodOrDeclareMethodCommon, _core.functionTypeAnnotationCommon, {\n    key: {\n      validate: (0, _utils.assertNodeType)(\"PrivateName\")\n    },\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    }\n  })\n});\n(0, _utils.default)(\"ImportAttribute\", {\n  visitor: [\"key\", \"value\"],\n  fields: {\n    key: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\", \"StringLiteral\")\n    },\n    value: {\n      validate: (0, _utils.assertNodeType)(\"StringLiteral\")\n    }\n  }\n});\n(0, _utils.default)(\"Decorator\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"DoExpression\", {\n  visitor: [\"body\"],\n  aliases: [\"Expression\"],\n  fields: {\n    body: {\n      validate: (0, _utils.assertNodeType)(\"BlockStatement\")\n    }\n  }\n});\n(0, _utils.default)(\"ExportDefaultSpecifier\", {\n  visitor: [\"exported\"],\n  aliases: [\"ModuleSpecifier\"],\n  fields: {\n    exported: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\n(0, _utils.default)(\"PrivateName\", {\n  visitor: [\"id\"],\n  aliases: [\"Private\"],\n  fields: {\n    id: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    }\n  }\n});\n(0, _utils.default)(\"RecordExpression\", {\n  visitor: [\"properties\"],\n  aliases: [\"Expression\"],\n  fields: {\n    properties: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"ObjectProperty\", \"SpreadElement\")))\n    }\n  }\n});\n(0, _utils.default)(\"TupleExpression\", {\n  fields: {\n    elements: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Expression\", \"SpreadElement\"))),\n      default: []\n    }\n  },\n  visitor: [\"elements\"],\n  aliases: [\"Expression\"]\n});\n(0, _utils.default)(\"DecimalLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});\n(0, _utils.default)(\"StaticBlock\", {\n  visitor: [\"body\"],\n  fields: {\n    body: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"Statement\")))\n    }\n  },\n  aliases: [\"Scopable\", \"BlockParent\"]\n});\n(0, _utils.default)(\"ModuleExpression\", {\n  visitor: [\"body\"],\n  fields: {\n    body: {\n      validate: (0, _utils.assertNodeType)(\"Program\")\n    }\n  },\n  aliases: [\"Expression\"]\n});"]},"metadata":{},"sourceType":"script"}