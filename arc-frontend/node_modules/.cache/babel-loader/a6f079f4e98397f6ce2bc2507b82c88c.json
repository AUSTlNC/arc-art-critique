{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _isPlainObject = _interopRequireDefault(require(\"lodash/isPlainObject\"));\n\nvar _isRegExp = _interopRequireDefault(require(\"lodash/isRegExp\"));\n\nvar _isValidIdentifier = _interopRequireDefault(require(\"../validators/isValidIdentifier\"));\n\nvar _generated = require(\"../builders/generated\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar _default = valueToNode;\nexports.default = _default;\n\nfunction valueToNode(value) {\n  if (value === undefined) {\n    return (0, _generated.identifier)(\"undefined\");\n  }\n\n  if (value === true || value === false) {\n    return (0, _generated.booleanLiteral)(value);\n  }\n\n  if (value === null) {\n    return (0, _generated.nullLiteral)();\n  }\n\n  if (typeof value === \"string\") {\n    return (0, _generated.stringLiteral)(value);\n  }\n\n  if (typeof value === \"number\") {\n    let result;\n\n    if (Number.isFinite(value)) {\n      result = (0, _generated.numericLiteral)(Math.abs(value));\n    } else {\n      let numerator;\n\n      if (Number.isNaN(value)) {\n        numerator = (0, _generated.numericLiteral)(0);\n      } else {\n        numerator = (0, _generated.numericLiteral)(1);\n      }\n\n      result = (0, _generated.binaryExpression)(\"/\", numerator, (0, _generated.numericLiteral)(0));\n    }\n\n    if (value < 0 || Object.is(value, -0)) {\n      result = (0, _generated.unaryExpression)(\"-\", result);\n    }\n\n    return result;\n  }\n\n  if ((0, _isRegExp.default)(value)) {\n    const pattern = value.source;\n    const flags = value.toString().match(/\\/([a-z]+|)$/)[1];\n    return (0, _generated.regExpLiteral)(pattern, flags);\n  }\n\n  if (Array.isArray(value)) {\n    return (0, _generated.arrayExpression)(value.map(valueToNode));\n  }\n\n  if ((0, _isPlainObject.default)(value)) {\n    const props = [];\n\n    for (const key of Object.keys(value)) {\n      let nodeKey;\n\n      if ((0, _isValidIdentifier.default)(key)) {\n        nodeKey = (0, _generated.identifier)(key);\n      } else {\n        nodeKey = (0, _generated.stringLiteral)(key);\n      }\n\n      props.push((0, _generated.objectProperty)(nodeKey, valueToNode(value[key])));\n    }\n\n    return (0, _generated.objectExpression)(props);\n  }\n\n  throw new Error(\"don't know how to turn this value into a node\");\n}","map":{"version":3,"sources":["/Users/AustinCai/Desktop/CS 370/ARC/arc-art-critique/arc-frontend/node_modules/@babel/types/lib/converters/valueToNode.js"],"names":["Object","defineProperty","exports","value","default","_isPlainObject","_interopRequireDefault","require","_isRegExp","_isValidIdentifier","_generated","obj","__esModule","_default","valueToNode","undefined","identifier","booleanLiteral","nullLiteral","stringLiteral","result","Number","isFinite","numericLiteral","Math","abs","numerator","isNaN","binaryExpression","is","unaryExpression","pattern","source","flags","toString","match","regExpLiteral","Array","isArray","arrayExpression","map","props","key","keys","nodeKey","push","objectProperty","objectExpression","Error"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _isPlainObject = _interopRequireDefault(require(\"lodash/isPlainObject\"));\n\nvar _isRegExp = _interopRequireDefault(require(\"lodash/isRegExp\"));\n\nvar _isValidIdentifier = _interopRequireDefault(require(\"../validators/isValidIdentifier\"));\n\nvar _generated = require(\"../builders/generated\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = valueToNode;\nexports.default = _default;\n\nfunction valueToNode(value) {\n  if (value === undefined) {\n    return (0, _generated.identifier)(\"undefined\");\n  }\n\n  if (value === true || value === false) {\n    return (0, _generated.booleanLiteral)(value);\n  }\n\n  if (value === null) {\n    return (0, _generated.nullLiteral)();\n  }\n\n  if (typeof value === \"string\") {\n    return (0, _generated.stringLiteral)(value);\n  }\n\n  if (typeof value === \"number\") {\n    let result;\n\n    if (Number.isFinite(value)) {\n      result = (0, _generated.numericLiteral)(Math.abs(value));\n    } else {\n      let numerator;\n\n      if (Number.isNaN(value)) {\n        numerator = (0, _generated.numericLiteral)(0);\n      } else {\n        numerator = (0, _generated.numericLiteral)(1);\n      }\n\n      result = (0, _generated.binaryExpression)(\"/\", numerator, (0, _generated.numericLiteral)(0));\n    }\n\n    if (value < 0 || Object.is(value, -0)) {\n      result = (0, _generated.unaryExpression)(\"-\", result);\n    }\n\n    return result;\n  }\n\n  if ((0, _isRegExp.default)(value)) {\n    const pattern = value.source;\n    const flags = value.toString().match(/\\/([a-z]+|)$/)[1];\n    return (0, _generated.regExpLiteral)(pattern, flags);\n  }\n\n  if (Array.isArray(value)) {\n    return (0, _generated.arrayExpression)(value.map(valueToNode));\n  }\n\n  if ((0, _isPlainObject.default)(value)) {\n    const props = [];\n\n    for (const key of Object.keys(value)) {\n      let nodeKey;\n\n      if ((0, _isValidIdentifier.default)(key)) {\n        nodeKey = (0, _generated.identifier)(key);\n      } else {\n        nodeKey = (0, _generated.stringLiteral)(key);\n      }\n\n      props.push((0, _generated.objectProperty)(nodeKey, valueToNode(value[key])));\n    }\n\n    return (0, _generated.objectExpression)(props);\n  }\n\n  throw new Error(\"don't know how to turn this value into a node\");\n}"]},"metadata":{},"sourceType":"script"}