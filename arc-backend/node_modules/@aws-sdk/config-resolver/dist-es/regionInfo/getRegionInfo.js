import { __assign } from "tslib";
import { getResolvedHostname } from "./getResolvedHostname";
import { getResolvedPartition } from "./getResolvedPartition";
export var getRegionInfo = function (region, _a) {
    var _b, _c, _d, _e;
    var signingService = _a.signingService, regionHash = _a.regionHash, partitionHash = _a.partitionHash;
    var partition = getResolvedPartition(region, { partitionHash: partitionHash });
    var resolvedRegion = (_c = (_b = partitionHash[partition]) === null || _b === void 0 ? void 0 : _b.endpoint) !== null && _c !== void 0 ? _c : region;
    return __assign(__assign({ partition: partition, signingService: signingService, hostname: getResolvedHostname(resolvedRegion, { signingService: signingService, regionHash: regionHash, partitionHash: partitionHash }) }, (((_d = regionHash[resolvedRegion]) === null || _d === void 0 ? void 0 : _d.signingRegion) && {
        signingRegion: regionHash[resolvedRegion].signingRegion,
    })), (((_e = regionHash[resolvedRegion]) === null || _e === void 0 ? void 0 : _e.signingService) && {
        signingService: regionHash[resolvedRegion].signingService,
    }));
};
